name: "Run tests"

on:
  pull_request:
    paths-ignore:
      - "**.md"
  push:
    branches:
      - "master"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  tests:
    name: "marine / cargo tests"
    runs-on: builder
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install marine cli
        run: cargo install --path tools/cli

      - name: Build examples
        run: ./build.sh
        working-directory: examples

      - name: Build marine-runtime wasm-tests
        run: ./build.sh
        working-directory: marine/tests/wasm_tests

      - name: Build marine-core wasm-tests
        run: ./build.sh
        working-directory: core/tests/wasm_tests

      - name: Run cargo test
        run: cargo test --release -v --all-features

  marine-js:
    name: "marine / marine-js tests"
    runs-on: builder
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Run wasm-pack
        run: ./build.sh
        working-directory: marine-js

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: marine-js/npm-package
          cache: "npm"

      - name: Install marine-js npm dependencies
        run: npm i
        working-directory: marine-js/npm-package

      - name: Build marine-js npm package
        run: npm run build
        working-directory: marine-js/npm-package

      - name: Run marine-js smoke tests
        run: npm run test
        working-directory: marine-js/npm-package

  lint:
    name: "marine / lints"
    timeout-minutes: 60
    runs-on: builder

    steps:
      - uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo check
        run: cargo check -v --all-features

      - name: Run cargo clippy
        run: cargo clippy -v --all-features
