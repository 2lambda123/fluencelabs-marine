name: "e2e"

on:
  pull_request:
    paths-ignore:
      - "!**.md"
  push:
    branches:
      - "master"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  FORCE_COLOR: true
  CARGO_HOME: "${{ github.workspace }}/cargo"

jobs:
  marine-rs-sdk-test:
    name: "Test marine-rs-sdk-test"
    runs-on: builder

    steps:
      - name: Checkout marine-rs-sdk-test
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/marine-rs-sdk-test

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set fluence-app-service version
        run: >
          cargo add fluence-app-service \
            --git https://github.com/fluencelabs/marine \
            --branch ${{ github.head_ref }} \
            --features raw-module-api

      - name: Set fluence-app-service version in marine-test-macro-impl
        run: >
          cargo add fluence-app-service \
            --git https://github.com/fluencelabs/marine \
            --branch ${{ github.head_ref }} \
            --features raw-module-api
        working-directory: crates/marine-test-macro-impl

      - run: cargo test --release --all-features --no-fail-fast

  fluence-app-service:
    name: "Build fluence-app-service"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout marine
        uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set marine-runtime version
        run: >
          cargo add marine-runtime \
            --git https://github.com/fluencelabs/marine \
            --branch ${{ github.head_ref }}
        working-directory: crates/fluence-app-service

      - run: cargo check
        working-directory: crates/fluence-app-service

      - uses: actions/upload-artifact@v3
        with:
          name: fluence-app-service
          path: |
            .
            !.git
            !.cargo
            !cargo
            !target/
            !*.wasm
            !*.wat

  avm-server:
    name: "Build avm-server"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout aquavm
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/aquavm

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set marine-runtime version
        run: >
          cargo add marine-runtime \
            --git https://github.com/fluencelabs/marine \
            --branch ${{ github.head_ref }}
        working-directory: avm/server

      - run: cargo check

      - uses: actions/upload-artifact@v3
        with:
          name: avm-server
          path: |
            .
            !.git
            !.cargo
            !cargo
            !target/
            !*.wasm
            !*.wat

  rust-peer:
    name: "Build rust-peer snapshot"
    runs-on: builder

    permissions:
      contents: read
      id-token: write

    needs:
      - avm-server
      - fluence-app-service

    steps:
      - name: Checkout rust-peer
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/rust-peer

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: external

      - name: Use local dependencies
        run: |
          sed -i 's#\(fluence-app-service =\) .*#\1 { path = "external/fluence-app-service/crates/fluence-app-service" }#g' Cargo.toml
          sed -i 's#\(avm-server =\) .*#\1 { path = "external/avm-server/avm/server" }#g' Cargo.toml

      - name: Run cargo build
        run: cargo build --release -p particle-node

      - name: Install cargo-nextest
        run: cargo install --locked cargo-nextest@0.9.22

      - name: Run cargo nextest
        run: cargo nextest run --release --all-features --no-fail-fast --retries 10 --test-threads 10

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.1
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push snapshot
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: .github/snapshot/Dockerfile
          tags: |
            docker.fluence.dev/marine:${{ github.head_ref }}
          labels: |
            sha=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  aqua-playground:
    needs:
      - rust-peer

    uses: fluencelabs/aqua-playground/.github/workflows/tests.yml@master
    with:
      rust-peer-image: docker.fluence.dev/marine:${{ github.head_ref }}

  fluence-js:
    needs:
      - rust-peer

    uses: fluencelabs/fluence-js/.github/workflows/tests.yml@master
    with:
      rust-peer-image: docker.fluence.dev/marine:${{ github.head_ref }}
